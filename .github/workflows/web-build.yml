# .github/workflows/flutter-web-build.yml
name: Flutter Web Build

on:
  workflow_dispatch:
    inputs:
      code_zip_url:
        description: "Direct link (Firebase or any URL) to the ZIP file containing the Flutter app code"
        required: true

jobs:
# ---------------------------------------------------------------- #
# 1) Fetch the zipped code and store it as an artifact             #
# ---------------------------------------------------------------- #
  fetch-flutter-code:
    runs-on: ubuntu-latest
    steps:
      # so local composite actions in ./.github/actions are available
      - uses: actions/checkout@v3
        with:
          clean: false

      - name: Download Flutter source ZIP
        run: |
          curl -L "${{ github.event.inputs.code_zip_url }}" -o flutter_app.zip
          mkdir code
          unzip -o flutter_app.zip -d code

      - name: Upload code as artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: flutter-code
          path: code/**                       # recursive upload of entire tree

# ---------------------------------------------------------------- #
# 2) Build the web bundle from that artifact                       #
# ---------------------------------------------------------------- #
  build-web:
    runs-on: ubuntu-latest
    needs: [fetch-flutter-code]

    steps:
      - uses: actions/checkout@v3            # again, for local actions

      - name: Download code artifact
        uses: ./.github/actions/download-artifact
        with:
          name: flutter-code
          path: code                         # sources will be in ./code

      # Pin the action itself to a release tag to avoid 504 timeouts
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.19.0
        with:
          channel: stable                    # pulls latest stable (currently 3.32.0)

      - name: Install dependencies
        run: flutter pub get
        working-directory: code

      - name: Build web (release)
        run: flutter build web --release --base-href "/${{ github.event.repository.name }}/"

        working-directory: code

      - name: Upload web bundle
        uses: ./.github/actions/upload-artifact
        with:
          name: web-build
          path: code/build/web
          retention-days: 7                  # keep for a week
  deploy-web:
    runs-on: ubuntu-latest
    needs: [build-web]
    permissions: { contents: write }       # allow the action to push

    steps:
      - uses: actions/checkout@v3          # ← makes ./.github/actions/ghpages visible

      - name: Download web bundle
        uses: ./.github/actions/download-artifact
        with:
          name: web-build
          path: public

      - name: Deploy to GitHub Pages (local action)
        uses: ./.github/actions/ghpages    # your composite action directory
        with:
          github_token: ${{ secrets.GHPAGES_TOKEN }}
          publish_dir: public

      - name: Notify backend (always)
        if: always()                       # run on success *or* failure
        env:
          WEBHOOK_URL: https://miniblocks-core-234407537699.europe-west1.run.app/api/github
        run: |
          conclusion="${{ job.status }}"   # 'success', 'failure', 'cancelled', …
          cat >payload.json <<EOF
          {
            "action": "completed",
            "workflow_run": {
              "id": ${{ github.run_id }},
              "name": "${{ github.workflow }}",
              "status": "completed",
              "conclusion": "$conclusion",
              "html_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
          }
          EOF

          echo "Sending workflow result ($conclusion) to backend…"
          curl --silent --show-error --fail \
               -H "Content-Type: application/json" \
               --data @payload.json \
               "$WEBHOOK_URL"
          
