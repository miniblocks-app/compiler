name: Build and Release

on:
  workflow_dispatch:
    inputs:
      code_zip_url:
        description: "Firebase link to the ZIP file containing the Flutter app code"
        required: true

jobs:
  # Download and unzip the Flutter code
  fetch-flutter-code:
    name: Fetch Flutter Code
    runs-on: ubuntu-latest
    steps:
      - name: Download Flutter App Code from Firebase
        run: |
          # Download the ZIP file
          curl -L "${{ github.event.inputs.code_zip_url }}" -o flutter_app.zip
          echo "Downloaded flutter_app.zip..."
          ls -l flutter_app.zip || true
          file flutter_app.zip || true

      - name: Unzip Flutter App Code
        run: |
          mkdir code
          unzip -o flutter_app.zip -d code
          echo "Unzipped Flutter app to ./code"

      - uses: actions/checkout@v3

      - name: Upload Code as Artifact
        # Either use your local vendored "upload-artifact" or the official one:
        uses: ./.github/actions/upload-artifact
        with:
          name: flutter-code
          path: code/

  build-android:
    name: Android Build
    runs-on: ubuntu-latest
    needs: fetch-flutter-code
    steps:
      # Checkout so we can reference local custom actions if needed. 
      # (If you have no local custom actions, you can skip checkout or replace with official actions.)
      - uses: actions/checkout@v3

      - name: Download Flutter Code
        # Download the artifact from the "fetch-flutter-code" job
        uses: ./.github/actions/download-artifact
        with:
          name: flutter-code
          path: code  # Put it into a folder named `code` in this job's workspace

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Dependencies
        run: cd code && flutter pub get

      - name: Build Android APK (Release)
        run: cd code && flutter build apk --release

      - name: Upload APK Artifact
        # Vendored upload-artifact action in .github/actions/upload-artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: android-apk
          path: code/build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    name: iOS Build
    runs-on: macos-latest
    needs: fetch-flutter-code
    steps:
      - uses: actions/checkout@v3

      - name: Download Flutter Code
        uses: ./.github/actions/download-artifact
        with:
          name: flutter-code
          path: code

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Dependencies
        run: cd code && flutter pub get

      - name: Update Pod repo
        run: cd code/ios && pod repo update

      - name: Build iOS Release (no-codesign)
        run: cd code && flutter build ios --release --no-codesign

      - name: Create Payload folder
        run: mkdir Payload
        working-directory: code/build/ios/iphoneos

      - name: Move Runner.app into Payload
        run: mv Runner.app/ Payload
        working-directory: code/build/ios/iphoneos

      - name: Zip output (IPA)
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: code/build/ios/iphoneos

      - name: Upload IPA Artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ios-ipa
          path: code/build/ios/iphoneos/FlutterIpaExport.ipa

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    steps:
      # Checkout to access any local custom actions, if used.
      - uses: actions/checkout@v3

      - name: Download Android APK
        uses: ./.github/actions/download-artifact
        with:
          name: android-apk
          path: artifacts

      - name: Download iOS IPA
        uses: ./.github/actions/download-artifact
        with:
          name: ios-ipa
          path: artifacts

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          file_glob: true
          tag: v1.0
          overwrite: true
          body: "This is the release built exclusively from the ZIP file."
